{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\src\\App.svelte",
    "..\\..\\src\\Article.svelte",
    "..\\..\\src\\Illustration.svelte",
    "..\\..\\src\\Item.svelte",
    "..\\..\\src\\Armor.svelte",
    "..\\..\\src\\Section.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { Button } from \"svelma\";\n  import { afterUpdate } from \"svelte\";\n  import { rul } from \"./Ruleset\";\n  import Article from \"./Article.svelte\";\n\n  let article = null;\n  let found = null;\n  let query = \"\";\n  let currentSection = null;\n  let activeOption;\n  let ignoreNextAutoscroll = false;\n\n  function goTo(id) {\n    window.location.hash = \"#\" + id;\n  }\n\n  function checkHash() {\n    let hash = document.location.hash;\n    if (hash) {\n      if (hash.substr(0, 7) == \"#PEDIA_\") {\n        selectSection(hash.substr(7));\n        article = rul.article(hash.substr(1));\n      } else if (hash.substr(0, 8) == \"#search:\") {\n        query = hash.substr(8);\n        query = query.replace(\"%20\", \" \");\n\n        found = rul.search.findArticles(query);        \n\n        article = null;\n      } else {\n        found = null;\n        let id = hash.substr(1);\n        if (!article || article.id != id) article = rul.article(id);\n      }\n    }\n\n    if (article) {\n      if (article.section && currentSection != article.section)\n        currentSection = article.section;\n    }\n  }\n\n  function nextArticle(delta) {\n    let nextArticle = rul.findNextArticle(article, delta);\n    if (nextArticle) {\n      goTo(nextArticle.id);\n    }\n  }\n\n  document.addEventListener(\"keydown\", event => {\n    const keyName = event.key;\n    if (keyName == \"ArrowRight\") nextArticle(1);\n    if (keyName == \"ArrowLeft\") nextArticle(-1);\n  });\n\n  function searchKeyUp(e) {\n    if (e.key == \"Enter\") {\n      goTo(\"search:\" + e.target.value);\n    }\n  }\n\n  function selectSection(id) {\n    currentSection = rul.sections[id];\n  }\n\n  window.onhashchange = checkHash;\n\n  checkHash();\n\n  afterUpdate(() => {\n    if(activeOption){\n      setTimeout(() => activeOption.scrollIntoView({behavior:'auto', block:'center'}, 10))\n    }\n  })\n\n  $:{\n    console.log(article);\n  }\n</script>\n\n<style>\n  .sidebar {\n    height: 95%;\n    position: fixed;\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n  .narrow {\n    max-width: 800px;\n  }\n  .menu-list a:visited {\n    color: white;\n  }\n</style>\n\n<svelte:head>{#if !article}<title>XPedia</title>{/if}</svelte:head>\n\n<nav class=\"navbar is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n\n  <div id=\"navbar\" class=\"navbar-menu brighter\">\n\n    <div class=\"navbar-start\">\n      <div class=\"navbar-item has-dropdown is-hoverable\">\n        <a href={\"#PEDIA_\" + (currentSection?currentSection.id:\"MAIN\")} class=\"navbar-link\">\n          <img src=\"xpedia/favicon.png\" alt=\"favicon\" />\n           {rul.modName} XPedia {currentSection?\": \" + currentSection.title : \"\"}\n        </a>\n        <div class=\"navbar-dropdown\">\n          {#each rul.sectionsOrder as section}\n            <a class=\"navbar-item\" href={'#PEDIA_' + section.id}>\n               {section.title}\n            </a>\n          {/each}\n        </div>\n      </div>\n    </div>\n\n    <div class=\"navbar-end\">\n      <div class=\"navbar-item\">\n        <input\n          class=\"input is-primary\"\n          bind:value={query}\n          on:keyup={searchKeyUp}\n          style=\"width:500px; background:black; color:white;\"\n          type=\"text\"\n          placeholder=\"Search query\" />\n      </div>\n    </div>\n  </div>\n</nav>\n\n<div class=\"columns is-fullheight\" style=\"height:100%;:black;\">\n  <div class=\"column is-2 is-sidebar-menu is-hidden-mobile sidebar padding-top\">\n    {#each rul.sectionsOrder as section}\n      {#if !currentSection || section.id == currentSection.id}\n        <p class=\"menu-label\">{section.title}</p>\n        <ul class=\"menu-list\">\n          {#each section.articles as option}\n            <li>\n              {#if article && article.id == option.id}\n                <a\n                  href={'#' + option.id}\n                  class=\"is-active\"\n                  bind:this={activeOption}>                  \n                  {option.title}\n                </a>\n              {:else}\n                <a href={'#' + option.id} on:click={() => ignoreNextAutoscroll = true}>{option.title} </a>\n              {/if}\n            </li>\n          {/each}\n        </ul>\n      {/if}\n    {/each}\n  </div>\n  <div class=\"column is-2\" />\n  <div class=\"column is-main-content main padding-top\">\n\n    {#if article}\n      <Article {article} {query} />\n    {/if}\n\n    {#if found}\n      <ul>\n        {#each found as option}\n          <li>\n            <a href={'#' + option.id}>{option.title}</a>\n          </li>\n        {/each}\n      </ul>\n    {/if}\n  </div>\n</div>\n",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n  import Illustration from './Illustration.svelte';\r\n  import Item from './Item.svelte';\r\n  import Armor from './Armor.svelte';\r\n  import Section from './Section.svelte';\r\n\r\n  export let article\r\n  export let query\r\n  let textwithHighlights\r\n\r\n  $:{\r\n    textwithHighlights = article.text || \"\"\r\n    if(query) {\r\n      for(let word of query.split()){            \r\n        let regEx = new RegExp(word, \"ig\");\r\n        textwithHighlights = textwithHighlights.replace(regEx, \"<span class='queried'>$&</span>\")\r\n      }\r\n    }\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n.article-title{\r\n  padding: 5px 0px 5px 0px;\r\n  font-size: larger;\r\n  font-weight: bold;\r\n}\r\n\r\n.article-text{\r\n  padding: 5px 0px 5px 0px;\r\n}\r\n</style>\r\n\r\n<svelte:head><title>{article.title}</title></svelte:head>\r\n\r\n<div class=\"article-title\">{article.title}</div>\r\n\r\n<Illustration id={article.image_id}/>\r\n\r\n<div class=\"article-text\">\r\n  {@html textwithHighlights}\r\n</div>\r\n\r\n{#if article.id in rul.items}\r\n  <Item item={rul.items[article.id]}/>\r\n{/if}\r\n\r\n{#if article.id in rul.armors}\r\n  <Armor armor={rul.armors[article.id]}/>\r\n{/if}  \r\n\r\n{#if article.type_id == -1}\r\n  <Section section={rul.sections[article.id.substr(6)]}/>\r\n{/if}\r\n",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n\r\n  export let id;\r\n  export let left = false;\r\n  export let maxWidth = 640\r\n  export let maxZoom = 4\r\n\r\n  function loaded(e) {\r\n    let zoom = Math.min(maxZoom, Math.max(1, Math.floor(maxWidth / e.target.naturalWidth)))\r\n    e.target.width = e.target.naturalWidth * zoom;\r\n    e.target.height = e.target.naturalHeight * zoom;\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n  .pedia-image {\r\n    image-rendering: pixelated;\r\n    image-rendering: crisp-edges;\r\n    float: right;\r\n    padding: 5px;\r\n  }\r\n</style>\r\n\r\n{#if rul.sprite(id)}\r\n  <div>\r\n    <img\r\n      class=\"pedia-image\"\r\n      style={left?\"float:left\":\"\"}\r\n      on:load={loaded}\r\n      alt={id || ''}\r\n      src={rul.sprite(id)} />\r\n  </div>\r\n{/if}\r\n",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n  import Illustration from \"./Illustration.svelte\";\r\n  import SpecialBonus from \"./SpecialBonus.svelte\"\r\n  import ItemList from \"./ItemList.svelte\"  \r\n  import Link from \"./Link.svelte\";\r\n\r\n  export let item;\r\n  let attacks\r\n\r\n  $:{ \r\n      attacks = item.attacks().slice()\r\n      if(item.compatibleAmmo)\r\n        for(let ammoId of item.compatibleAmmo){\r\n          let ammo = rul.items[ammoId]\r\n          let ammoAttack = ammo.attacks()[0]\r\n          ammoAttack.item = ammo\r\n          attacks.push(ammoAttack)\r\n        }\r\n\r\n      console.log(attacks)\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n  td{\r\n    padding:0px 2px;\r\n  }\r\n  .sprite{\r\n    image-rendering: pixelated;\r\n    image-rendering: crisp-edges;\r\n  }\r\n  .right-column{\r\n    vertical-align: top;\r\n  }\r\n  audio{\r\n    height:20px;\r\n    width:300px;\r\n  }\r\n  .attacks-table td{\r\n    border: solid 1px gray;\r\n    font-size: 14pt;\r\n  }\r\n  .attacks-table thead{\r\n    background: #382C44;  \r\n  }\r\n  .alter td{\r\n    border: none;\r\n    font-size: small;\r\n  }\r\n</style>\r\n\r\n<!--<Illustration id={item.sprite} />-->\r\n\r\n<Illustration id={item.sprite} left={true} maxZoom={2}/>\r\n\r\n{#if item._attacks}\r\n  <table class=\"attacks-table\">\r\n    <thead>\r\n      {#if item.battleType != 2}\r\n        <td>mode</td>\r\n        <td>accuracy</td>\r\n        <td>cost</td>\r\n      {/if}\r\n      <td>damage</td>\r\n      <td>mods</td>\r\n    </thead>\r\n    {#each attacks as attack}\r\n      <tr>\r\n        {#if attack.mode == \"ammo\"}\r\n          {#if item.battleType != 2}\r\n            <td>\r\n              <img class=\"sprite\" style=\"position:relative;\" alt=\"X\" src={rul.sprite(attack.item.sprite)}/>\r\n            </td> \r\n            <td colspan=\"2\">\r\n              <Link href={attack.item.type}/>\r\n            </td>\r\n          {/if}          \r\n        {:else}\r\n          <td>{attack.mode}{attack.shots==1?\"\":\"×\" + attack.shots}</td> \r\n          <td>{attack.accuracy} <small><SpecialBonus plus={true} bonus={attack.accuracyMultiplier}/></small> </td>\r\n          <td>{attack.cost.time + (attack.flatTime?\"\":\"%\")} TU</td>\r\n        {/if}          \r\n        <td>{#if attack.damage || attack.damageType}\r\n          {attack.pellets>1?\"×\" + attack.pellets + \" \":\"\"}\r\n          {rul.damageTypeName(attack.damageType)}\r\n          {attack.damage}\r\n          <SpecialBonus plus={true} bonus={attack.damageBonus}/>\r\n        {/if}\r\n        </td>\r\n        <td>\r\n          {#if attack.alter}            \r\n            <table class=\"alter\">\r\n            {#each Object.keys(attack.alter).sort() as field, i}\r\n              <tr>\r\n              <td>{field}</td><td>{attack.alter[field]}</td>\r\n              </tr>\r\n            {/each}\r\n            </table>\r\n          {/if}\r\n        </td>\r\n      </tr>      \r\n    {/each}\r\n  </table>\r\n{/if}\r\n\r\n<br/>\r\n\r\n<table class=\"main-table\">\r\n  {#each Object.entries(item).sort((a,b) => a[0]>b[0]?1:-1) as prop, linei}\r\n    {#if !['sprite', 'type', '_attacks'].includes(prop[0])}\r\n      <tr>\r\n        <td>{rul.decamelize(prop[0])}</td>\r\n        <td class=\"right-column\">\r\n        {#if ['compatibleAmmo', 'categories', 'requiresBuy'].includes(prop[0])}\r\n          <ItemList items={prop[1]}/>\r\n        {:else if ['damageBonus', 'meleeBonus', 'accuracyMultiplier', 'meleeMultiplier', 'closeQuartersMultiplier'].includes(prop[0])}\r\n          <SpecialBonus bonus={prop[1]}/>\r\n        {:else if ['damageType', 'meleeType'].includes(prop[0])}\r\n          {rul.damageTypeName(prop[1])}\r\n        {:else if prop[0] == 'battleType'}\r\n          {prop[1]}: {rul.battleTypes[prop[1]]}\r\n        {:else if ['reloadSound', 'fireSound', 'meleeHitSound', 'hitSound'].includes(prop[0])}          \r\n          {#if rul.sounds[prop[1]]}\r\n            <a href={rul.sound(prop[1])}>{rul.sounds[prop[1]]}</a>\r\n            <audio controls src={rul.sound(prop[1])}>Audio tag not working</audio>\r\n          {:else}\r\n            {prop[1]}\r\n          {/if}\r\n        {:else if ['floorSprite', 'handSprite'].includes(prop[0])}\r\n          <a style=\"vertical-align:top\" href={rul.specialSprite(prop[0], prop[1])}>{prop[1]}</a> \r\n          <img class=\"sprite\" alt={prop[1]} src={rul.specialSprite(prop[0], prop[1])}/>\r\n        {:else if prop[1] instanceof Object}\r\n          <table>\r\n          {#each Object.keys(prop[1]).sort() as field, i}\r\n            <tr>\r\n            <td>{field}</td><td>{prop[1][field]}</td>\r\n            </tr>\r\n          {/each}\r\n          </table>\r\n        {:else}        \r\n          {prop[1]}\r\n        {/if}\r\n        </td>\r\n      </tr>\r\n    {/if}\r\n  {/each}\r\n</table>\r\n\r\n<br/>",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n  import Link from \"./Link.svelte\";\r\n\r\n  export let armor;\r\n  let dollColumns = 10;\r\n  let seeAllVariants = false;\r\n  let zoom = 1;\r\n\r\n  console.log(armor)\r\n</script>\r\n\r\n<style>\r\n  .rec{\r\n    padding-right: 10pt;\r\n  }\r\n  .res1 {\r\n    text-align: right;\r\n    padding-right: 5pt;\r\n  }\r\n  .res2 {\r\n    text-align: right;\r\n  }\r\n  .armor {\r\n    pointer-events: none;\r\n    position: relative;\r\n  }\r\n  .armor-layer {\r\n    position: absolute;\r\n    top: -30px;\r\n    left: 0px;\r\n  }\r\n  .armor-variant {\r\n    left: 40px;\r\n    position: absolute;\r\n    opacity: 0.5;\r\n    font-size: small;\r\n  }\r\n</style>\r\n\r\n{#if Object.keys(armor.dollSprites).length > 1}\r\n  <p>\r\n    <button class=\"button\" style=\"width:170px\" on:click={e => (seeAllVariants = !seeAllVariants)}>\r\n      {seeAllVariants ? 'Hide' : 'See'} all variants\r\n    </button>\r\n  </p>\r\n{/if}\r\n\r\n{#if armor.dollSprites}\r\n  {#each Object.keys(armor.dollSprites).sort((a,b) => rul.bodiesCompare([a,b]))  as body, i}\r\n    {#if seeAllVariants || i == 0}\r\n      <div\r\n        class=\"armor\"\r\n        style={'left:' + (i % dollColumns) * 80 + 'px;' + 'top:' + Math.floor(i / dollColumns) * 120 + 'px;'}>\r\n        {#if seeAllVariants}<div class=\"armor-variant\">{body}</div>{/if}\r\n        {#each armor.dollSprites[body] as url, j}\r\n          <img src={url} alt={body} class=\"armor-layer\" />\r\n        {/each}\r\n      </div>\r\n    {/if}\r\n  {/each}\r\n{/if}\r\n<div\r\n  style={'height:' + (seeAllVariants ? (Math.floor(Object.keys(armor.dollSprites).length / dollColumns) + 1) * 120 : 120) + 'px'} />\r\n\r\n<table class=\"main-table\">\r\n  {#each Object.entries(armor).sort((a, b) => (a[0] > b[0] ? 1 : -1)) as prop}\r\n    {#if !['type', 'layersDefinition', 'spriteFaceColor', 'spriteHairColor', 'spriteUtileColor', 'spriteFaceGroup', 'spriteHairGroup', 'spriteUtileGroup', 'customArmorPreviewIndex', 'dollSprites', 'layersDefaultPrefix',\r\n    'frontArmor', 'sideArmor', 'rearArmor', 'underArmor', 'tags'].includes(prop[0])}\r\n      <tr>\r\n        <td>{rul.decamelize(prop[0])}</td>\r\n        <td>\r\n          {#if prop[0] == 'damageModifier'}\r\n            <table padding=\"3px\">\r\n              {#each prop[1] as res, i}\r\n                <tr>\r\n                  <td class=\"res1\">{rul.damageTypeName(i)}</td>\r\n                  <td class=\"res2\">{Math.round(res * 100)}%</td>\r\n                </tr>\r\n              {/each}\r\n            </table>\r\n          {:else if ['storeItem', 'corpseGeo', 'specialWeapon'].includes(prop[0])}\r\n            <Link href={prop[1]}/>\r\n          {:else if 'corpseBattle' == prop[0]}\r\n            <Link href={prop[1][0]}/>            \r\n          {:else if 'spriteSheet' == prop[0]}\r\n            <a href={rul.sprite(prop[1])}>{prop[1]}</a>\r\n          {:else if 'recovery' == prop[0]}\r\n            <table>\r\n              {#each Object.keys(prop[1]).sort() as field, i}\r\n                <tr>\r\n                <td class=\"rec\">{rul.decamelize(field)}</td>\r\n                <td>\r\n                  {#each Object.keys(prop[1][field]) as subfield, j}\r\n                    {#if j != 0}, {/if}\r\n                    {rul.decamelize(subfield)}: {rul.decamelize(prop[1][field][subfield])}\r\n                  {/each}                  \r\n                </td>\r\n                </tr>\r\n              {/each}\r\n            </table>\r\n          {:else if ['builtInWeapons','units'].includes(prop[0])}\r\n            {#each prop[1] as field, i}\r\n              {#if i != 0}, {/if}\r\n              <Link href={field}/>              \r\n            {/each}\r\n          {:else if prop[1] instanceof Object}\r\n            {#each Object.keys(prop[1]).sort() as field, i}\r\n              {#if i != 0}, {/if}\r\n              {rul.decamelize(field)}: {rul.decamelize(prop[1][field])}\r\n            {/each}\r\n          {:else}\r\n            {prop[1]}\r\n          {/if}\r\n        </td>\r\n      </tr>\r\n    {/if}\r\n  {/each}\r\n</table>\r\n",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n  import Link from \"./Link.svelte\";\r\n\r\n  export let section;\r\n\r\n  $: {\r\n    console.log(section);\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n.cols{\r\n  padding-left: 5px;\r\n  height:100%;\r\n  columns: 250px;\r\n}\r\n</style>\r\n\r\n<div class=\"cols\">\r\n  {#each section.articles as option}\r\n    <a href={'#' + option.id}>\r\n      {option.title}\r\n    </a>\r\n    <br/>\r\n  {/each}\r\n</div>"
  ],
  "names": [],
  "mappings": "AAkFE,QAAQ,cAAC,CAAC,AACR,MAAM,CAAE,GAAG,CACX,QAAQ,CAAE,KAAK,CACf,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,MAAM,AACpB,CAAC,AAID,wBAAU,CAAC,eAAC,QAAQ,AAAC,CAAC,AACpB,KAAK,CAAE,KAAK,AACd,CAAC;ACrEH,4BAAc,CAAC,AACb,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CACxB,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,2BAAa,CAAC,AACZ,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,AAC1B,CAAC;ACfC,YAAY,cAAC,CAAC,AACZ,eAAe,CAAE,SAAS,CAC1B,eAAe,CAAE,WAAW,CAC5B,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,GAAG,AACd,CAAC;ACID,gBAAE,CAAC,AACD,QAAQ,GAAG,CAAC,GAAG,AACjB,CAAC,AACD,qBAAO,CAAC,AACN,eAAe,CAAE,SAAS,CAC1B,eAAe,CAAE,WAAW,AAC9B,CAAC,AACD,2BAAa,CAAC,AACZ,cAAc,CAAE,GAAG,AACrB,CAAC,AACD,mBAAK,CAAC,AACJ,OAAO,IAAI,CACX,MAAM,KAAK,AACb,CAAC,AACD,4BAAc,CAAC,gBAAE,CAAC,AAChB,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CACtB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,4BAAc,CAAC,mBAAK,CAAC,AACnB,UAAU,CAAE,OAAO,AACrB,CAAC,AACD,oBAAM,CAAC,gBAAE,CAAC,AACR,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,KAAK,AAClB,CAAC;ACrCD,mBAAI,CAAC,AACH,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,UAAU,CAAE,KAAK,AACnB,CAAC,AACD,MAAM,eAAC,CAAC,AACN,cAAc,CAAE,IAAI,CACpB,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,YAAY,eAAC,CAAC,AACZ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,KAAK,CACV,IAAI,CAAE,GAAG,AACX,CAAC,AACD,cAAc,eAAC,CAAC,AACd,IAAI,CAAE,IAAI,CACV,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,AAClB,CAAC;ACxBH,oBAAK,CAAC,AACJ,YAAY,CAAE,GAAG,CACjB,OAAO,IAAI,CACX,OAAO,CAAE,KAAK,AAChB,CAAC"
}