{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\src\\App.svelte",
    "..\\..\\src\\Article.svelte",
    "..\\..\\src\\Item.svelte",
    "..\\..\\src\\Illustration.svelte",
    "..\\..\\src\\Armor.svelte",
    "..\\..\\src\\CraftWeapon.svelte",
    "..\\..\\src\\LinksList.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { Button } from \"svelma\";\n  import { tick, afterUpdate } from \"svelte\";\n  import { rul } from \"./Ruleset\";\n  import Article from \"./Article.svelte\";\n\n  export let source\n\n  let article = null;\n  let found = null;\n  let query = \"\";\n  let currentSection = null;\n  let activeOption;\n  let ignoreNextAutoscroll = false;\n  let mode = \"\"\n\n  async function loadRules(){\n    await rul.load(source)\n  }\n\n  let rulesLoaded = loadRules();\n\n  function goTo(id) {\n    window.location.hash = \"#\" + id;\n  }\n\n  function checkHash() {\n    let hash = document.location.hash;\n    let first_ = hash.indexOf('_')\n    if(first_ == -1)\n      return;\n    mode = hash.substr(1, first_ - 1)\n    /*console.log(mode);\n    debugger;*/\n    if (hash) {\n      if (mode == \"PEDIA\") {\n        selectSection(hash.substr(7));\n        article = rul.article(hash.substr(1));\n      } else if (mode == \"CATEGORY\") {\n        article = rul.article(hash.substr(1));\n      } else if (mode == \"CONDITIONS\") {\n        article = rul.article(hash.substr(1));\n      } else if (mode == \"SEARCH\") {\n        query = hash.substr(8);\n        query = query.replace(\"%20\", \" \");\n\n        found = rul.search.findArticles(query);        \n\n        article = null;\n      } else {\n        found = null;\n        let id = hash.substr(1);\n        if (!article || article.id != id) article = rul.article(id);\n      }\n    }\n\n    if (article) {\n      if (article.section && currentSection != article.section)\n        currentSection = article.section;\n    }\n  }\n\n  function nextArticle(delta) {\n    let nextArticle = rul.findNextArticle(article, delta);\n    if (nextArticle) {\n      goTo(nextArticle.id);\n    }\n  }\n\n  document.addEventListener(\"keydown\", event => {\n    const keyName = event.key;\n    if (keyName == \"ArrowRight\") nextArticle(1);\n    if (keyName == \"ArrowLeft\") nextArticle(-1);\n  });\n\n  function searchKeyUp(e) {\n    if (e.key == \"Enter\") {\n      goTo(\"SEARCH_\" + e.target.value);\n    }\n  }\n\n  function selectSection(id) {\n    currentSection = rul.sections[id];\n  }\n\n  window.onhashchange = checkHash;\n\n  rulesLoaded.then(checkHash);\n\n  afterUpdate(() => {\n    if(activeOption){\n      tick().then( () => activeOption.scrollIntoView({behavior:'auto', block:'center'}) )\n    }\n  })\n\n  $:{\n    if(article)\n      console.info(article);\n  }\n</script>\n\n<style>\n  .sidebar {\n    height: 95%;\n    position: fixed;\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n  .narrow {\n    max-width: 800px;\n  }\n  .menu-list a:visited {\n    color: white;\n  }\n  .active-article-option {\n    background: #584C64;\n  }\n\n  .centered {\n   position: fixed;\n   top: 50%;\n   left: 50%;\n   width: 100px;\n   height: 100px;\n   margin-top: -50px; /* Half the height */\n   margin-left: -50px; /* Half the width */\n  }  \n\n</style>\n\n<svelte:head>{#if !article}<title>XPedia</title>{/if}</svelte:head>\n\n{#await rulesLoaded}\n<img class=\"centered\" alt=\"Loading rules...\" src=\"xpedia/spinner.svg\"/>\n{:then}\n\n<nav class=\"navbar is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n\n  <div id=\"navbar\" class=\"navbar-menu brighter\">\n\n    <div class=\"navbar-start\">\n      <div class=\"navbar-item has-dropdown is-hoverable\">\n        <a href={\"#PEDIA_\" + (currentSection?currentSection.id:\"MAIN\")} class=\"navbar-link\">\n          <img src=\"xpedia/favicon.png\" alt=\"favicon\" />\n           {rul.modName} XPedia {currentSection?\": \" + currentSection.title : \"\"}\n        </a>\n        <div class=\"navbar-dropdown\">\n          <div style=\"display:flex\">\n            <div>\n              {#each rul.sectionsOrder as section}\n                <a class=\"navbar-item\" href={'#PEDIA_' + section.id}>\n                  {section.title}\n                </a>\n              {/each}\n            </div>\n            <div>\n              {#each rul.typeSectionsOrder as section}\n                <a class=\"navbar-item\" href={'#PEDIA_' + section.id}>\n                  {section.title}\n                </a>\n              {/each}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"navbar-end\">\n      <div class=\"navbar-item\">\n        <input\n          class=\"input is-primary\"\n          bind:value={query}\n          on:keyup={searchKeyUp}\n          style=\"width:500px; background:black; color:white;\"\n          type=\"text\"\n          placeholder=\"Search query\" />\n      </div>\n    </div>\n  </div>\n</nav>\n\n<div class=\"columns is-fullheight\" style=\"height:100%;\">\n  <div class=\"column is-2 is-sidebar-menu is-hidden-mobile sidebar padding-top\">\n    {#each (article && article.section && article.section.isType())?rul.typeSectionsOrder:rul.sectionsOrder as section}\n      {#if !currentSection || section.id == currentSection.id}\n        <p class=\"menu-label\">{section.title}</p>\n        <ul class=\"menu-list\">\n          {#each section.articles as option}\n            <li>\n              {#if article && article.id == option.id}\n                <a\n                  href={'#' + option.id}\n                  class=\"active-article-option\"\n                  bind:this={activeOption}>                  \n                  {option.title}\n                </a>\n              {:else}\n                <a href={'#' + option.id} on:click={() => ignoreNextAutoscroll = true}>{option.title} </a>\n              {/if}\n            </li>\n          {/each}\n        </ul>\n      {/if}\n    {/each}\n  </div>\n  <div class=\"column is-2\" />\n  <div class=\"column is-main-content main padding-top\">\n\n    {#if article}\n      <Article {article} {query} />\n    {/if}\n\n    {#if found}\n      <ul>\n        {#each found as option}\n          <li>\n            <a href={'#' + option.id}>{option.title}</a>\n          </li>\n        {/each}\n      </ul>\n    {/if}\n  </div>\n</div>\n\n{/await}",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n  import Illustration from \"./Illustration.svelte\";\r\n  import Item from \"./Item.svelte\";\r\n  import Armor from \"./Armor.svelte\";\r\n  import Craft from \"./Craft.svelte\";\r\n  import CraftWeapon from \"./CraftWeapon.svelte\";\r\n  import Unit from \"./Unit.svelte\";\r\n  import Research from \"./Research.svelte\";\r\n  import Manufacture from \"./Manufacture.svelte\";\r\n  import Conditions from \"./Conditions.svelte\"\r\n  import LinksList from \"./LinksList.svelte\";\r\n\r\n  export let article;\r\n  export let query;\r\n  let textwithHighlights;\r\n\r\n  $: {\r\n    textwithHighlights = article.text || \"\";\r\n    if (query) {\r\n      for (let word of query.split()) {\r\n        let regEx = new RegExp(word, \"ig\");\r\n        textwithHighlights = textwithHighlights.replace(\r\n          regEx,\r\n          \"<span class='queried'>$&</span>\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .article-text {\r\n    padding: 5px 0px 5px 0px;\r\n  }\r\n  .manufacture_and_research {\r\n    display: flex vertical;\r\n    align-items: flex-start;\r\n    justify-content: stretch;\r\n  }\r\n</style>\r\n\r\n<svelte:head>\r\n  <title>{article.title || \"XPedia\"}</title>\r\n</svelte:head>\r\n\r\n<h1>{article.title || article.id}</h1>\r\n\r\n{#if !(article.id in rul.units)}\r\n  <Illustration id={article.image_id} />\r\n{/if}\r\n\r\n<div class=\"article-text\">\r\n  {@html textwithHighlights}\r\n</div>\r\n\r\n{#if article.type_id == -1}\r\n  {#if article.mode == \"PEDIA\"}\r\n    <LinksList links={rul.sections[article.query].articles.map(a => a.id)} />\r\n  {:else if article.mode == \"CONDITIONS\"}\r\n    <Conditions conditions={rul.startingConditions[article.query]}/>    \r\n  {/if}\r\n{/if}\r\n\r\n<div class=\"flex-horisontal\">\r\n  <div>\r\n    {#if article.id in rul.units}\r\n      <Unit unit={rul.units[article.id]} />\r\n    {/if}\r\n\r\n    {#if article.id in rul.items}\r\n      <Item item={rul.items[article.id]} />\r\n    {/if}\r\n  </div>\r\n\r\n  {#if article.id in rul.armors}\r\n    <Armor armor={rul.armors[article.id]} />\r\n  {:else if article.id in rul.units && rul.units[article.id].armor}\r\n    <Armor armor={rul.armors[rul.units[article.id].armor]} />\r\n  {/if}\r\n\r\n  {#if article.id in rul.crafts}\r\n    <Craft craft={rul.crafts[article.id]} />\r\n  {/if}\r\n\r\n  {#if article.id in rul.craftWeapons}\r\n    <CraftWeapon weapon={rul.craftWeapons[article.id]} />\r\n  {/if}\r\n\r\n  <div class=\"manufacture_and_research\">\r\n    {#if article.id in rul.manufacture}\r\n      <Manufacture manufacture={rul.manufacture[article.id]} />\r\n    {/if}\r\n\r\n    {#if article.id in rul.research}\r\n      <Research research={rul.research[article.id]} />\r\n    {/if}\r\n  </div>\r\n\r\n</div>\r\n",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n  import Illustration from \"./Illustration.svelte\";\r\n  import SpecialBonus from \"./SpecialBonus.svelte\"\r\n  import ItemList from \"./ItemList.svelte\"  \r\n  import Link from \"./Link.svelte\";\r\n  import CanvasImage from \"./CanvasImage.svelte\"\r\n\r\n  export let item;\r\n  export let title = \"Item\"\r\n  let attacks\r\n\r\n  function soundsFrom(sounds){\r\n    if(!sounds)\r\n      return []\r\n    if(!sounds.length)\r\n      sounds = [sounds]\r\n    return sounds.map(s => rul.path + rul.sounds[s]).filter(s => s)\r\n  }\r\n\r\n  $:{ \r\n      attacks = item.attacks().slice()\r\n      if(item.compatibleAmmo)\r\n        for(let ammoId of item.compatibleAmmo){\r\n          let ammo = rul.items[ammoId]\r\n          let ammoAttack = ammo.attacks()[0]\r\n          ammoAttack.item = ammo\r\n          attacks.push(ammoAttack)\r\n        }\r\n\r\n      console.info(attacks)\r\n    }\r\n\r\n  console.info(item)\r\n</script>\r\n\r\n<style>\r\n  td{\r\n    padding:0px 2px;\r\n  }\r\n  .sprite{\r\n    image-rendering: pixelated;\r\n    image-rendering: crisp-edges;\r\n  }\r\n  .right-column{\r\n    vertical-align: top;\r\n  }\r\n  audio{\r\n    height:20px;\r\n    width:300px;\r\n  }\r\n  \r\n  .attacks-table{\r\n    min-width: 800px;\r\n  }\r\n\r\n  .attacks-table td{\r\n    border: solid 0.3px #382C44;\r\n    font-size: 14pt;\r\n  }\r\n  .attacks-table thead{\r\n    background: #382C44;  \r\n  }\r\n  .alter td{\r\n    border: none;\r\n    font-size: small;\r\n  }\r\n  img {\r\n    max-width: 100%;\r\n  }  \r\n  .ammo-img{\r\n    text-align: center; \r\n    vertical-align: middle;\r\n    padding: 0px 2px 0px 0px;\r\n  }\r\n</style>\r\n\r\n<table class=\"main-table\">\r\n  <tr> <td colspan=\"2\" class=\"table-header\">{title}</td> </tr>\r\n  {#if (item.sprite && item.sprite != \"Resources/Blanks/Blank.png\") ||attacks.length > 0}\r\n    <tr> <td colspan=\"2\">\r\n      <div style=\"display: flex; align-items: flex-start;\">\r\n      <CanvasImage style=\"padding:3px\" src={rul.sprite(item.sprite)} maxWidth={32*item.invWidth} maxHeight={32*item.invHeight} zoom=\"2\"/>\r\n      {#if attacks.length > 0}\r\n        <table class=\"attacks-table\">\r\n          <thead>\r\n            {#if item.battleType != 2}\r\n              <td>mode</td>\r\n              <td>accuracy</td>\r\n              <td>cost</td>\r\n            {/if}\r\n            <td>damage</td>\r\n          </thead>\r\n          {#each attacks as attack}\r\n            <tr>\r\n              {#if attack.mode == \"ammo\"}\r\n                {#if item.battleType != 2}\r\n                  <td rowspan=\"2\" class=\"ammo-img\">\r\n                    <CanvasImage src={rul.sprite(attack.item.sprite)} maxWidth={32*attack.item.invWidth} maxHeight={32*attack.item.invHeight} zoom=\"2\"/>\r\n                    <!--<img class=\"sprite\" use:ammoSprite style=\"position:relative;\" alt=\"X\" src={rul.sprite(attack.item.sprite)}/>-->                    \r\n                  </td> \r\n                  <td colspan=\"2\">\r\n                    <Link href={attack.item.type}/><br/><small>Clip: {attack.item.clipSize} Wgt: {attack.item.weight}</small>\r\n                  </td>\r\n                {/if}          \r\n              {:else}\r\n                <td rowspan=\"2\">{attack.name}{attack.shots==1?\"\":\"×\" + attack.shots}</td> \r\n                <td><em>{attack.accuracy}</em><small>%<br/><SpecialBonus bonus={attack.accuracyMultiplier}/></small> </td>\r\n                <td>\r\n                <em>{attack.cost.time + (attack.flatTime?\"\":\"%\")}</em> <small>TU</small>                \r\n                {#each Object.keys(attack.cost) as res}\r\n                  {#if res != 'time' && attack.cost[res] != 0}<br/><em>{attack.cost[res]}</em>&nbsp;<small>{res}</small>{/if}\r\n                {/each}                \r\n                </td>\r\n              {/if}          \r\n              <td>{#if attack.damage || attack.damageType}\r\n                {attack.pellets>1 && attack.damageBonus?\"(\":\"\"}<em>{attack.damage}</em>\r\n                <small>\r\n                  <SpecialBonus plus={true} bonus={attack.damageBonus}/>{attack.pellets>1 && attack.damageBonus?\")\":\"\"}\r\n                </small>\r\n                {attack.pellets>1?\" ×\" + attack.pellets:\"\"}\r\n                <br/>{rul.damageTypeName(attack.damageType)}\r\n              {/if}\r\n              </td>\r\n              </tr>\r\n              <tr>\r\n              <td colspan=\"3\" style=\"columns: 170px auto;\">\r\n                <small>\r\n                {#if attack.alter}            \r\n                  {#each Object.keys(attack.alter).sort() as field, i}\r\n                    {field}:&nbsp;<em>{attack.alter[field]}</em><br/>\r\n                  {/each}\r\n                {/if}\r\n                </small>\r\n              </td>\r\n            </tr>      \r\n          {/each}\r\n        </table>\r\n      {/if}  \r\n      </div>\r\n    </td></tr>\r\n    \r\n  {/if}\r\n\r\n\r\n  {#each Object.entries(item).sort((a,b) => a[0]>b[0]?1:-1) as prop, linei}\r\n    {#if !['sprite', 'type', '_attacks', 'damageAlter'].includes(prop[0])}\r\n      <tr>\r\n        <td>{@html rul.decamelize(prop[0])}</td>\r\n        <td class=\"right-column\">\r\n        {#if ['armors', 'compatibleAmmo', 'compatibleWeapons', 'categories', 'requiresBuy', 'requires'].includes(prop[0])}\r\n          <ItemList items={prop[1]} vertical={true}/>\r\n        {:else if ['manufacture', 'componentOf'].includes(prop[0])}\r\n          <table class=\"number-table\">\r\n          {#each Object.keys(prop[1]).sort() as field, i}\r\n            <tr><td>{prop[1][field]}</td><td><Link href={field}/></td></tr>\r\n          {/each}\r\n          </table>\r\n        {:else if ['damageBonus', 'meleeBonus', 'accuracyMultiplier', 'meleeMultiplier', 'closeQuartersMultiplier'].includes(prop[0])}\r\n          <SpecialBonus bonus={prop[1]}/>\r\n        {:else if ['defaultInventorySlot', 'unprimeActionName', 'name'].includes(prop[0])}\r\n          <Link href={prop[1]}/>\r\n        {:else if ['damageType', 'meleeType'].includes(prop[0])}\r\n          {rul.damageTypeName(prop[1])}\r\n        {:else if prop[0] == 'battleType'}\r\n          {prop[1]}: {rul.battleTypes[prop[1]]}\r\n        {:else if prop[0].includes(\"Sound\")}\r\n          {#each soundsFrom(prop[1]) as sound, i}\r\n            {@html i>0?\"<br/>\":\"\"}\r\n            <audio controls src={sound}>Audio tag not working</audio>\r\n          {/each}\r\n        {:else if ['floorSprite', 'handSprite'].includes(prop[0])}\r\n          <a style=\"vertical-align:top\" href={rul.specialSprite(prop[0], prop[1])}>{prop[1]}</a> \r\n          <img class=\"sprite\" alt={prop[1]} src={rul.specialSprite(prop[0], prop[1])}/>\r\n        {:else if prop[1] instanceof Object}\r\n          <table class=\"number-table\">\r\n          {#each Object.keys(prop[1]).sort() as field, i}\r\n            <tr><td>{@html rul.decamelize(field)}</td><td>{@html rul.decamelize(prop[1][field])}</td></tr>\r\n          {/each}\r\n          </table>\r\n        {:else}        \r\n          {prop[1]}\r\n        {/if}\r\n        </td>\r\n      </tr>\r\n    {/if}\r\n  {/each}\r\n</table>\r\n\r\n<br/>",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n\r\n  export let id;\r\n  export let left = false;\r\n  export let maxWidth = 640\r\n  export let maxZoom = 4\r\n  export let style = \"\"\r\n\r\n  function loaded(img) {\r\n    console.info(img)\r\n    let zoom = Math.min(maxZoom, Math.max(1, Math.floor(maxWidth / img.naturalWidth)))\r\n    img.width = img.naturalWidth * zoom;\r\n    img.height = img.naturalHeight * zoom;\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n  .pedia-image {\r\n    image-rendering: pixelated;\r\n    image-rendering: crisp-edges;\r\n    float: right;\r\n    padding: 5px;\r\n  }\r\n</style>\r\n\r\n{#if rul.sprite(id)}\r\n  <div>\r\n    <img\r\n      class=\"pedia-image\"\r\n      style={style + (left?\"float:left\":\"\")}\r\n      on:load={e => loaded(e.target)}\r\n      alt={id || ''}\r\n      src={rul.sprite(id)} />\r\n  </div>\r\n{/if}",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n  import Link from \"./Link.svelte\";\r\n\r\n  export let armor;\r\n  let dollColumns = 6;\r\n  let seeAllVariants = false;\r\n  let zoom = 1;\r\n\r\n  console.log(armor)\r\n</script>\r\n\r\n<style>\r\n  .rec{\r\n    padding-right: 10pt;\r\n  }\r\n  .armors{\r\n    min-width:600px;\r\n  }\r\n  .armor {\r\n    pointer-events: none;\r\n    position: relative;\r\n  }\r\n  .armor-layer {\r\n    position: absolute;\r\n    top: -30px;\r\n    left: 0px;\r\n  }\r\n  .armor-variant {\r\n    left: 40px;\r\n    position: absolute;\r\n    opacity: 0.5;\r\n    font-size: small;\r\n  }\r\n</style>\r\n\r\n<table class=\"main-table\">\r\n  <tr> <td colspan=\"2\" class=\"table-header\">Armor</td> </tr>\r\n  <tr>\r\n  <td colspan=\"2\">\r\n    <div class=\"armors\">\r\n      {#if Object.keys(armor.dollSprites).length > 1}\r\n        <p>\r\n          <button class=\"button\" style=\"width:170px\" on:click={e => (seeAllVariants = !seeAllVariants)}>\r\n            {seeAllVariants ? 'Hide' : 'See'} all variants\r\n          </button>\r\n        </p>\r\n      {/if}\r\n\r\n      {#if armor.dollSprites}\r\n        {#each Object.keys(armor.dollSprites).sort((a,b) => rul.bodiesCompare([a,b]))  as body, i}\r\n          {#if seeAllVariants || i == 0}\r\n            <div\r\n              class=\"armor\"\r\n              style=\"left:{(i % dollColumns) * 80}px; top:{Math.floor(i / dollColumns) * 120}px;\">\r\n              {#if seeAllVariants}<div class=\"armor-variant\">{body}</div>{/if}\r\n              {#each armor.dollSprites[body] as url, j}\r\n                <img src={url} alt={body} class=\"armor-layer\" />\r\n              {/each}\r\n            </div>\r\n          {/if}\r\n        {/each}\r\n        <div style={'height:' + (seeAllVariants ? (Math.floor(Object.keys(armor.dollSprites).length / dollColumns) + 1) * 120 : 120) + 'px'} />\r\n      {/if}\r\n    </div>\r\n  </td>\r\n  </tr>\r\n  <tr>\r\n  <td colspan=\"2\">\r\n    <div class=\"flex-horisontal\">\r\n      {#each ['armor', 'damageModifier', 'stats'] as prop}\r\n        {#if armor[prop]}\r\n        <table class=\"number-table\">\r\n        <tr><td colspan=\"2\" class=\"table-header\">{@html rul.decamelize(prop)}</td></tr>\r\n        {#each Object.keys(armor[prop]).sort((a,b) => rul.str(a)>rul.str(b)?1:-1) as field, i}\r\n          <tr>\r\n          <td>{@html prop==\"damageModifier\"?rul.damageTypeName(field):rul.decamelize(field)}</td>\r\n          <td>{@html prop==\"damageModifier\"?Math.floor(armor[prop][field]*100):rul.decamelize(armor[prop][field])}</td>\r\n          </tr>\r\n        {/each}\r\n        </table>\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n  </td>\r\n  </tr>\r\n\r\n  {#each Object.entries(armor).sort((a, b) => (a[0] > b[0] ? 1 : -1)) as prop}\r\n    {#if !['type', 'layersDefinition', 'spriteFaceColor', 'spriteHairColor', 'spriteUtileColor', 'spriteFaceGroup', 'spriteHairGroup', 'spriteUtileGroup', 'customArmorPreviewIndex', 'dollSprites', 'layersDefaultPrefix',\r\n    'frontArmor', 'sideArmor', 'rearArmor', 'underArmor', 'spriteInv', 'scripts', 'armor', 'damageModifier', 'stats'].includes(prop[0])}\r\n      <tr>\r\n        <td>{@html rul.decamelize(prop[0])}</td>\r\n        <td>\r\n          {#if false}\r\n            -\r\n          {:else if prop[0] == 'damageModifier'}\r\n            <table class=\"number-table\">\r\n              {#each prop[1] as res, i}\r\n                <tr>\r\n                  <td width=\"50%\" class=\"number-table1\">{rul.damageTypeName(i)}</td>\r\n                  <td width=\"50%\" class=\"number-table2\">{Math.round(res * 100)}%</td>\r\n                </tr>\r\n              {/each}\r\n            </table>\r\n          {:else if ['storeItem', 'corpseGeo', 'specialWeapon'].includes(prop[0])}\r\n            <Link href={prop[1]}/>\r\n          {:else if ['corpseBattle'].includes(prop[0])}\r\n            <Link href={prop[1][0]}/>            \r\n          {:else if 'spriteSheet' == prop[0]}\r\n            <a href={rul.sprite(prop[1])}>{prop[1]}</a>\r\n          {:else if 'recovery' == prop[0]}\r\n            <table class=\"number-table\">\r\n              {#each Object.keys(prop[1]).sort() as field, i}\r\n                <tr>\r\n                <td class=\"rec\">{@html rul.decamelize(field)}</td>\r\n                <td>\r\n                  {#each Object.keys(prop[1][field]) as subfield, j}\r\n                    {#if j != 0}<br/> {/if}\r\n                    {@html rul.decamelize(subfield)}: {@html rul.decamelize(prop[1][field][subfield])}\r\n                  {/each}                  \r\n                </td>\r\n                </tr>\r\n              {/each}\r\n            </table>\r\n          {:else if ['builtInWeapons','users', 'units'].includes(prop[0])}\r\n            {#each prop[1].filter(s => s.substr(0,8) != \"INV_NULL\") as field, i}\r\n              {#if i != 0}, {/if}\r\n              <Link href={field}/>\r\n            {/each}\r\n          {:else if prop[1] instanceof Object}\r\n            <table class=\"number-table\">\r\n            {#each Object.keys(prop[1]).sort() as field, i}\r\n              <tr><td>{@html rul.decamelize(field)}</td><td>{@html rul.decamelize(prop[1][field])}</td></tr>\r\n            {/each}\r\n            </table>\r\n          {:else}\r\n            {prop[1]}\r\n          {/if}\r\n        </td>\r\n      </tr>\r\n    {/if}\r\n  {/each}\r\n</table>\r\n",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n  import Link from \"./Link.svelte\";\r\n  import ItemList from \"./ItemList.svelte\";\r\n  import Illustration from \"./Illustration.svelte\";\r\n  import Item from \"./Item.svelte\";\r\n\r\n  export let weapon;\r\n\r\n  $: {\r\n    console.log(weapon);\r\n  }\r\n</script>\r\n\r\n<style>\r\n.panels3 td{\r\n  padding-right:10px;\r\n  vertical-align: top;\r\n}\r\n</style>\r\n\r\n<table class=\"panels3\">\r\n  <tr>\r\n    <td>\r\n      <table class=\"main-table\">\r\n        <tr>\r\n          <td colspan=\"2\" class=\"table-header\">Weapon</td>\r\n        </tr>\r\n        {#each Object.entries(weapon).sort((a, b) =>\r\n          a[0] > b[0] ? 1 : -1\r\n        ) as prop}\r\n          {#if !['type'].includes(prop[0])}\r\n            <tr>\r\n              <td class=\"padding-right\">\r\n                {@html rul.decamelize(prop[0])}\r\n              </td>\r\n              <td>\r\n                {#if ['launcher', 'clip'].includes(prop[0])}\r\n                  <Link href={prop[1]} />\r\n                {:else if prop[1] instanceof Object}\r\n                  {#each Object.keys(prop[1]).sort() as field, i}\r\n                    {#if i != 0},{/if}\r\n                    {@html rul.decamelize(field) + \":&nbsp;\" + rul.decamelize(prop[1][field])}\r\n                  {/each}\r\n                {:else}{prop[1]}{/if}\r\n              </td>\r\n            </tr>\r\n          {/if}\r\n        {/each}\r\n      </table>\r\n    </td>\r\n    <td>\r\n    {#if weapon.launcher}\r\n      <Item item={rul.items[weapon.launcher]} title={\"Launcher: \" + rul.str(weapon.launcher)}/>\r\n    {/if}\r\n    {#if weapon.clip}\r\n      <Item item={rul.items[weapon.clip]} title={\"Clip: \" + rul.str(weapon.clip)}/>\r\n    {/if}\r\n    </td>\r\n  </tr>\r\n</table>\r\n",
    "<script>\r\n  import { rul } from \"./Ruleset\";\r\n  import Link from \"./Link.svelte\";\r\n\r\n  export let links;\r\n  export let title\r\n\r\n</script>\r\n\r\n<style>\r\n  .cols {\r\n    columns: 250px;\r\n    padding-left: 20px;\r\n    color: green;\r\n    margin-right: 10px;\r\n    padding-top: 0px;\r\n  }\r\n  .contain{\r\n    border: solid 0.3px #382C44;\r\n  }\r\n  .header{\r\n    text-align: center;\r\n    color: #66ffff;\r\n    background: #281C34;\r\n    padding: 2px;\r\n  }\r\n</style>\r\n\r\n{#if links && links.length > 0}\r\n  <div class=\"contain\">\r\n    {#if title}\r\n      <div class=\"header\">\r\n        {title}\r\n      </div>\r\n    {/if}\r\n    <div class=\"cols\">\r\n      <ol>\r\n        {#each links as option}\r\n          <li>\r\n            <a href={'#' + option}> {rul.str(option)} </a>\r\n          </li>\r\n        {/each}\r\n      </ol>\r\n    </div>\r\n  </div>\r\n{/if}"
  ],
  "names": [],
  "mappings": "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"
}